// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 0db2cec6a51bfbc8 "AM portfolio", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * icon?: undefined // Icon
 * title?: string // Title
 * description?: string // Description
 * imageBannerVisible?: boolean // Image banner Visible
 * imageBanner?: {src: string, srcSet?: string, alt?: string} // Image banner
 * tickerVisible?: boolean // Ticker Visible
 * tickerImg1?: {src: string, srcSet?: string, alt?: string} // Ticker Img 1
 * tickerImg2?: {src: string, srcSet?: string, alt?: string} // Ticker Img 2
 * tickerImg3?: {src: string, srcSet?: string, alt?: string} // Ticker Img 3
}} Props

 */
import { className, css, fonts } from "./chunks/chunk-YTM2CAUE.js";
import { stdin_default } from "./chunks/chunk-E4632PSI.js";
import { routes } from "./chunks/chunk-23HYNGZD.js";

// virtual:service-card
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/dLSSEmQ4dDcu1CH8v60R/0yGKolYasprEzFd4nkEo/iwZ8DtEpy.js
import { jsx as _jsx2, jsxs as _jsxs2 } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls as addPropertyControls2,
	ComponentViewportProvider,
	ControlType as ControlType2,
	cx,
	getFonts,
	getFontsFromSharedStyle,
	getLoadingLazyAtYPosition,
	Image,
	Instance,
	RichText,
	SmartComponentScopedContainer,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
	withFX,
} from "unframer";
import {
	LayoutGroup as LayoutGroup2,
	motion as motion2,
	MotionConfigContext,
} from "unframer";
import * as React from "react";
import { useRef as useRef2 } from "react";

// /:https://framerusercontent.com/modules/B2xAlJLcN0gOnt11mSPw/6yBrflQSNZ1yENMohj0e/Ticker.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	Children,
	useLayoutEffect,
	useEffect,
	useState,
	useRef,
	useMemo,
	useCallback,
	cloneElement,
	startTransition,
	forwardRef,
	useImperativeHandle,
} from "react";
import { addPropertyControls, ControlType, RenderTarget } from "unframer";
import {
	useReducedMotion,
	LayoutGroup,
	useInView,
	useMotionValue,
	useTransform,
	motion,
	frame,
} from "unframer";
import { resize } from "@motionone/dom";
var MAX_DUPLICATED_ITEMS = 100;
var directionTransformers = {
	left: (offset) => `translateX(-${offset}px)`,
	right: (offset) => `translateX(${offset}px)`,
	top: (offset) => `translateY(-${offset}px)`,
	bottom: (offset) => `translateY(${offset}px)`,
};
function Ticker(props) {
	let {
		slots = [],
		gap,
		padding,
		paddingPerSide,
		paddingTop,
		paddingRight,
		paddingBottom,
		paddingLeft,
		speed,
		hoverFactor,
		direction,
		alignment,
		sizingOptions,
		fadeOptions,
		style,
	} = props;
	const { fadeContent, overflow, fadeWidth, fadeInset, fadeAlpha } =
		fadeOptions;
	const { widthType, heightType } = sizingOptions;
	const paddingValue = paddingPerSide
		? `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`
		: `${padding}px`;
	const currentTarget = RenderTarget.current();
	const isCanvas =
		currentTarget === RenderTarget.canvas ||
		currentTarget === RenderTarget.export;
	const filteredSlots = slots.filter(Boolean);
	const numChildren = Children.count(filteredSlots);
	const hasChildren = numChildren > 0;
	if (direction === true) {
		direction = "left";
	}
	const isHorizontal = direction === "left" || direction === "right";
	const offset = useMotionValue(0);
	const transformer = directionTransformers[direction];
	const transform = useTransform(offset, transformer);
	const parentRef = useRef(null);
	const childrenRef = useMemo(() => {
		return [
			{
				current: null,
			},
			{
				current: null,
			},
		];
	}, []);
	const [size, setSize] = useState({
		parent: null,
		children: null,
	});
	let clonedChildren = null;
	let dupedChildren = [];
	let duplicateBy = 0;
	let opacity = 0;
	if (isCanvas) {
		duplicateBy = numChildren ? Math.floor(10 / numChildren) : 0;
		opacity = 1;
	}
	if (!isCanvas && hasChildren && size.parent) {
		duplicateBy = Math.round((size.parent / size.children) * 2) + 1;
		duplicateBy = Math.min(duplicateBy, MAX_DUPLICATED_ITEMS);
		opacity = 1;
	}
	const measure = useCallback(() => {
		if (hasChildren && parentRef.current) {
			const parentLength = isHorizontal
				? parentRef.current.offsetWidth
				: parentRef.current.offsetHeight;
			const start = childrenRef[0].current
				? isHorizontal
					? childrenRef[0].current.offsetLeft
					: childrenRef[0].current.offsetTop
				: 0;
			const end = childrenRef[1].current
				? isHorizontal
					? childrenRef[1].current.offsetLeft +
						childrenRef[1].current.offsetWidth
					: childrenRef[1].current.offsetTop +
						childrenRef[1].current.offsetHeight
				: 0;
			const childrenLength = end - start + gap;
			startTransition(() => {
				setSize({
					parent: parentLength,
					children: childrenLength,
				});
			});
		}
	}, []);
	const childrenStyles = isCanvas
		? {
				contentVisibility: "auto",
			}
		: {};
	if (hasChildren) {
		if (!isCanvas) {
			let initialResize = useRef(true);
			useLayoutEffect(() => {
				frame.read(measure, false, true);
				return resize(parentRef.current, ({ contentSize }) => {
					if (
						!initialResize.current &&
						(contentSize.width || contentSize.height)
					) {
						frame.read(measure, false, true);
					}
					initialResize.current = false;
				});
			}, []);
		}
		clonedChildren = Children.map(filteredSlots, (child, index) => {
			let ref;
			if (index === 0) {
				ref = childrenRef[0];
			}
			if (index === filteredSlots.length - 1) {
				ref = childrenRef[1];
			}
			const size2 = {
				width: widthType ? child.props?.width : "100%",
				height: heightType ? child.props?.height : "100%",
			};
			return (
				<LayoutGroup inherit={"id"}>
					<Wrapper ref={ref} style={size2}>
						{
							/* @__PURE__ */ cloneElement(
								child,
								{
									style: {
										...child.props?.style,
										...size2,
										flexShrink: 0,
										...childrenStyles,
									},
									layoutId: child.props.layoutId
										? child.props.layoutId + "-original-" + index
										: void 0,
								},
								child.props?.children,
							)
						}
					</Wrapper>
				</LayoutGroup>
			);
		});
	}
	const isInView = isCanvas ? true : useInView(parentRef);
	if (!isCanvas) {
		for (let i = 0; i < duplicateBy; i++) {
			dupedChildren = dupedChildren.concat(
				Children.map(filteredSlots, (child, childIndex) => {
					const size2 = {
						width: widthType ? child.props?.width : "100%",
						height: heightType ? child.props?.height : "100%",
						willChange: !isInView ? void 0 : "transform",
					};
					return (
						<LayoutGroup inherit={"id"}>
							<Wrapper style={size2}>
								{
									/* @__PURE__ */ cloneElement(
										child,
										{
											key: i + " " + childIndex,
											style: {
												...child.props?.style,
												width: widthType ? child.props?.width : "100%",
												height: heightType ? child.props?.height : "100%",
												flexShrink: 0,
												...childrenStyles,
											},
											layoutId: child.props.layoutId
												? child.props.layoutId + "-dupe-" + i
												: void 0,
										},
										child.props?.children,
									)
								}
							</Wrapper>
						</LayoutGroup>
					);
				}),
			);
		}
	}
	const animateToValue =
		size.children + size.children * Math.round(size.parent / size.children);
	const initialTime = useRef(null);
	const prevTime = useRef(null);
	const xOrY = useRef(0);
	const isHover = useRef(false);
	const isReducedMotion = useReducedMotion();
	const listRef = useRef(null);
	const animationRef = useRef(null);
	if (!isCanvas) {
		useEffect(() => {
			if (isReducedMotion || !animateToValue || !speed) {
				return;
			}
			animationRef.current = listRef.current.animate(
				{
					transform: [transformer(0), transformer(animateToValue)],
				},
				{
					duration: (Math.abs(animateToValue) / speed) * 1e3,
					iterations: Infinity,
					easing: "linear",
				},
			);
			return () => animationRef.current.cancel();
		}, [hoverFactor, animateToValue, speed]);
		const playOrPause = useCallback(() => {
			if (!animationRef.current) return;
			const hidden = document.hidden;
			if (isInView && !hidden && animationRef.current.playState === "paused") {
				animationRef.current.play();
			} else if (
				(!isInView || hidden) &&
				animationRef.current.playState === "running"
			) {
				animationRef.current.pause();
			}
		}, [isInView]);
		useEffect(() => {
			playOrPause();
		}, [isInView, hoverFactor, animateToValue, speed]);
		useEffect(() => {
			document.addEventListener("visibilitychange", playOrPause);
			return () => {
				document.removeEventListener("visibilitychange", playOrPause);
			};
		}, [playOrPause]);
	}
	const fadeDirection = isHorizontal ? "to right" : "to bottom";
	const fadeWidthStart = fadeWidth / 2;
	const fadeWidthEnd = 100 - fadeWidth / 2;
	const fadeInsetStart = clamp(fadeInset, 0, fadeWidthStart);
	const fadeInsetEnd = 100 - fadeInset;
	const fadeMask = `linear-gradient(${fadeDirection}, rgba(0, 0, 0, ${fadeAlpha}) ${fadeInsetStart}%, rgba(0, 0, 0, 1) ${fadeWidthStart}%, rgba(0, 0, 0, 1) ${fadeWidthEnd}%, rgba(0, 0, 0, ${fadeAlpha}) ${fadeInsetEnd}%)`;
	if (!hasChildren) {
		return (
			<section style={placeholderStyles}>
				<div style={emojiStyles}>{"\u2728"}</div>
				<p style={titleStyles}>{"Connect to Content"}</p>
				<p style={subtitleStyles}>
					{"Add layers or components to infinitely loop on your page."}
				</p>
			</section>
		);
	}
	return (
		<section
			style={{
				...containerStyle,
				opacity,
				WebkitMaskImage: fadeContent ? fadeMask : void 0,
				maskImage: fadeContent ? fadeMask : void 0,
				overflow: overflow ? "visible" : "hidden",
				padding: paddingValue,
			}}
			ref={parentRef}
		>
			<motion.ul
				ref={listRef}
				style={{
					...containerStyle,
					gap,
					top:
						direction === "bottom" && isValidNumber(animateToValue)
							? -animateToValue
							: void 0,
					left:
						direction === "right" && isValidNumber(animateToValue)
							? -animateToValue
							: void 0,
					placeItems: alignment,
					position: "relative",
					flexDirection: isHorizontal ? "row" : "column",
					...style,
					willChange: isCanvas || !isInView ? "auto" : "transform",
					transform: transformer(0),
				}}
				onMouseEnter={() => {
					isHover.current = true;
					if (animationRef.current) {
						animationRef.current.playbackRate = hoverFactor;
					}
				}}
				onMouseLeave={() => {
					isHover.current = false;
					if (animationRef.current) {
						animationRef.current.playbackRate = 1;
					}
				}}
			>
				{clonedChildren}
				{dupedChildren}
			</motion.ul>
		</section>
	);
}
var Wrapper = /* @__PURE__ */ forwardRef(({ children, ...props }, ref) => {
	const innerRef = useRef();
	const inView = useInView(innerRef);
	useImperativeHandle(ref, () => innerRef.current);
	useEffect(() => {
		const current = innerRef.current;
		if (!current) return;
		if (inView) {
			current.querySelectorAll("button,a").forEach((el) => {
				const orig = el.dataset.origTabIndex;
				if (orig) el.tabIndex = orig;
				else el.removeAttribute("tabIndex");
			});
		} else {
			current.querySelectorAll("button,a").forEach((el) => {
				const orig = el.getAttribute("tabIndex");
				if (orig) el.dataset.origTabIndex = orig;
				el.tabIndex = -1;
			});
		}
	}, [inView]);
	return (
		<li {...props} aria-hidden={!inView} ref={innerRef}>
			{children}
		</li>
	);
});
Ticker.defaultProps = {
	gap: 10,
	padding: 10,
	sizingOptions: {
		widthType: true,
		heightType: true,
	},
	fadeOptions: {
		fadeContent: true,
		overflow: false,
		fadeWidth: 25,
		fadeAlpha: 0,
		fadeInset: 0,
	},
	direction: true,
};
addPropertyControls(Ticker, {
	slots: {
		type: ControlType.Array,
		title: "Children",
		control: {
			type: ControlType.ComponentInstance,
		},
	},
	speed: {
		type: ControlType.Number,
		title: "Speed",
		min: 0,
		max: 1e3,
		defaultValue: 100,
		unit: "%",
		displayStepper: true,
		step: 5,
	},
	direction: {
		type: ControlType.Enum,
		title: "Direction",
		options: ["left", "right", "top", "bottom"],
		optionIcons: [
			"direction-left",
			"direction-right",
			"direction-up",
			"direction-down",
		],
		optionTitles: ["Left", "Right", "Top", "Bottom"],
		defaultValue: "left",
		displaySegmentedControl: true,
	},
	alignment: {
		type: ControlType.Enum,
		title: "Align",
		options: ["flex-start", "center", "flex-end"],
		optionIcons: {
			direction: {
				right: ["align-top", "align-middle", "align-bottom"],
				left: ["align-top", "align-middle", "align-bottom"],
				top: ["align-left", "align-center", "align-right"],
				bottom: ["align-left", "align-center", "align-right"],
			},
		},
		defaultValue: "center",
		displaySegmentedControl: true,
	},
	gap: {
		type: ControlType.Number,
		title: "Gap",
	},
	padding: {
		title: "Padding",
		type: ControlType.FusedNumber,
		toggleKey: "paddingPerSide",
		toggleTitles: ["Padding", "Padding per side"],
		valueKeys: ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"],
		valueLabels: ["T", "R", "B", "L"],
		min: 0,
	},
	sizingOptions: {
		type: ControlType.Object,
		title: "Sizing",
		controls: {
			widthType: {
				type: ControlType.Boolean,
				title: "Width",
				enabledTitle: "Auto",
				disabledTitle: "Stretch",
				defaultValue: true,
			},
			heightType: {
				type: ControlType.Boolean,
				title: "Height",
				enabledTitle: "Auto",
				disabledTitle: "Stretch",
				defaultValue: true,
			},
		},
	},
	fadeOptions: {
		type: ControlType.Object,
		title: "Clipping",
		controls: {
			fadeContent: {
				type: ControlType.Boolean,
				title: "Fade",
				defaultValue: true,
			},
			overflow: {
				type: ControlType.Boolean,
				title: "Overflow",
				enabledTitle: "Show",
				disabledTitle: "Hide",
				defaultValue: false,
				hidden(props) {
					return props.fadeContent === true;
				},
			},
			fadeWidth: {
				type: ControlType.Number,
				title: "Width",
				defaultValue: 25,
				min: 0,
				max: 100,
				unit: "%",
				hidden(props) {
					return props.fadeContent === false;
				},
			},
			fadeInset: {
				type: ControlType.Number,
				title: "Inset",
				defaultValue: 0,
				min: 0,
				max: 100,
				unit: "%",
				hidden(props) {
					return props.fadeContent === false;
				},
			},
			fadeAlpha: {
				type: ControlType.Number,
				title: "Opacity",
				defaultValue: 0,
				min: 0,
				max: 1,
				step: 0.05,
				hidden(props) {
					return props.fadeContent === false;
				},
			},
		},
	},
	hoverFactor: {
		type: ControlType.Number,
		title: "Hover",
		min: 0,
		max: 1,
		unit: "x",
		defaultValue: 1,
		step: 0.1,
		displayStepper: true,
		description: "Slows down the speed while you are hovering.",
	},
});
var containerStyle = {
	display: "flex",
	width: "100%",
	height: "100%",
	maxWidth: "100%",
	maxHeight: "100%",
	placeItems: "center",
	margin: 0,
	padding: 0,
	listStyleType: "none",
	textIndent: "none",
};
var placeholderStyles = {
	display: "flex",
	width: "100%",
	height: "100%",
	placeContent: "center",
	placeItems: "center",
	flexDirection: "column",
	color: "#96F",
	background: "rgba(136, 85, 255, 0.1)",
	fontSize: 11,
	overflow: "hidden",
	padding: "20px 20px 30px 20px",
};
var emojiStyles = {
	fontSize: 32,
	marginBottom: 10,
};
var titleStyles = {
	margin: 0,
	marginBottom: 10,
	fontWeight: 600,
	textAlign: "center",
};
var subtitleStyles = {
	margin: 0,
	opacity: 0.7,
	maxWidth: 150,
	lineHeight: 1.5,
	textAlign: "center",
};
var clamp = (num, min, max) => Math.min(Math.max(num, min), max);
var isValidNumber = (value) => typeof value === "number" && !isNaN(value);

// /:https://framerusercontent.com/modules/rbbDPPHheH3lcfFWRXBT/jqMRdav74uZ0TPNA0muO/WkrX6JBfV.js
import { fontStore } from "unframer";
fontStore.loadFonts([
	"GF;Plus Jakarta Sans-600",
	"GF;Plus Jakarta Sans-700",
	"GF;Plus Jakarta Sans-700italic",
	"GF;Plus Jakarta Sans-600italic",
]);
var fonts2 = [
	{
		explicitInter: true,
		fonts: [
			{
				family: "Plus Jakarta Sans",
				source: "google",
				style: "normal",
				url: "https://fonts.gstatic.com/s/plusjakartasans/v8/LDIbaomQNQcsA88c7O9yZ4KMCoOg4IA6-91aHEjcWuA_d0nNTxXUEKi4Rw.woff2",
				weight: "600",
			},
			{
				family: "Plus Jakarta Sans",
				source: "google",
				style: "normal",
				url: "https://fonts.gstatic.com/s/plusjakartasans/v8/LDIbaomQNQcsA88c7O9yZ4KMCoOg4IA6-91aHEjcWuA_TknNTxXUEKi4Rw.woff2",
				weight: "700",
			},
			{
				family: "Plus Jakarta Sans",
				source: "google",
				style: "italic",
				url: "https://fonts.gstatic.com/s/plusjakartasans/v8/LDIZaomQNQcsA88c7O9yZ4KMCoOg4KozySKCdSNG9OcqYQ3CDh_VMq2oR82k.woff2",
				weight: "700",
			},
			{
				family: "Plus Jakarta Sans",
				source: "google",
				style: "italic",
				url: "https://fonts.gstatic.com/s/plusjakartasans/v8/LDIZaomQNQcsA88c7O9yZ4KMCoOg4KozySKCdSNG9OcqYQ37Dh_VMq2oR82k.woff2",
				weight: "600",
			},
		],
	},
];
var css2 = [
	'.framer-33SOM .framer-styles-preset-1ajziol:not(.rich-text-wrapper), .framer-33SOM .framer-styles-preset-1ajziol.rich-text-wrapper h5 { --framer-font-family: "Plus Jakarta Sans", "Plus Jakarta Sans Placeholder", sans-serif; --framer-font-family-bold: "Plus Jakarta Sans", "Plus Jakarta Sans Placeholder", sans-serif; --framer-font-family-bold-italic: "Plus Jakarta Sans", "Plus Jakarta Sans Placeholder", sans-serif; --framer-font-family-italic: "Plus Jakarta Sans", "Plus Jakarta Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 20px; --framer-font-style: normal; --framer-font-style-bold: normal; --framer-font-style-bold-italic: italic; --framer-font-style-italic: italic; --framer-font-variation-axes: normal; --framer-font-weight: 600; --framer-font-weight-bold: 700; --framer-font-weight-bold-italic: 700; --framer-font-weight-italic: 600; --framer-letter-spacing: 0em; --framer-line-height: 1.4em; --framer-paragraph-spacing: 40px; --framer-text-alignment: left; --framer-text-color: var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: none; }',
];
var className2 = "framer-33SOM";

// /:https://framerusercontent.com/modules/dLSSEmQ4dDcu1CH8v60R/0yGKolYasprEzFd4nkEo/iwZ8DtEpy.js
var TickerFonts = getFonts(Ticker);
var MotionDivWithFX = withFX(motion2.div);
var serializationHash = "framer-094xm";
var variantClassNames = {
	B6ioKshK0: "framer-v-16e0psl",
};
var animation = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	x: -50,
	y: 0,
};
var transition1 = {
	damping: 25,
	delay: 0.3,
	mass: 1,
	stiffness: 127,
	type: "spring",
};
var animation1 = {
	opacity: 0,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	transition: transition1,
	x: -50,
	y: 0,
};
var transition2 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var toResponsiveImage = (value) => {
	if (
		typeof value === "object" &&
		value !== null &&
		typeof value.src === "string"
	) {
		return value;
	}
	return typeof value === "string"
		? {
				src: value,
			}
		: void 0;
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion2.create(React.Fragment);
var getProps = ({
	description,
	height,
	icon,
	id,
	imageBanner,
	imageBannerVisible,
	tickerImg1,
	tickerImg2,
	tickerImg3,
	tickerVisible,
	title,
	width,
	...props
}) => {
	return {
		...props,
		CUemSLa8g: tickerImg1 ??
			props.CUemSLa8g ?? {
				pixelHeight: 422,
				pixelWidth: 750,
				src: "https://framerusercontent.com/images/SHf0cFljW0oyFMbRhzsnK7vI9Zc.jpg?width=750&height=422",
				srcSet:
					"https://framerusercontent.com/images/SHf0cFljW0oyFMbRhzsnK7vI9Zc.jpg?scale-down-to=512&width=750&height=422 512w,https://framerusercontent.com/images/SHf0cFljW0oyFMbRhzsnK7vI9Zc.jpg?width=750&height=422 750w",
			},
		fEYrMcRJj: tickerVisible ?? props.fEYrMcRJj ?? true,
		onO9zpjab: imageBannerVisible ?? props.onO9zpjab,
		ORC0vCUBE: title ?? props.ORC0vCUBE ?? "Framer Design",
		QcPCm6Jjr: imageBanner ??
			props.QcPCm6Jjr ?? {
				alt: "",
				pixelHeight: 1260,
				pixelWidth: 2400,
				src: "https://framerusercontent.com/images/IwwlXF60xjgLFBH3Sj6kzl9eXs.png?scale-down-to=2048&width=2400&height=1260",
			},
		suLhv9h1F: icon ?? props.suLhv9h1F ?? stdin_default,
		t7BJqRmXA:
			description ??
			props.t7BJqRmXA ??
			"Bringing ideas to life with interactive, user-centered Framer designs that simplify complexity and elevate user experience",
		W5JbL1BSu: tickerImg2 ??
			props.W5JbL1BSu ?? {
				pixelHeight: 250,
				pixelWidth: 315,
				src: "https://framerusercontent.com/images/bwxJz5Clwu00DEiSST80BJRiac.png?width=315&height=250",
			},
		ZVarABtmB: tickerImg3 ??
			props.ZVarABtmB ?? {
				pixelHeight: 450,
				pixelWidth: 800,
				src: "https://framerusercontent.com/images/KdhVf2kud9SD2TBgOgGhbWyuqxA.webp?width=800&height=450",
				srcSet:
					"https://framerusercontent.com/images/KdhVf2kud9SD2TBgOgGhbWyuqxA.webp?scale-down-to=512&width=800&height=450 512w,https://framerusercontent.com/images/KdhVf2kud9SD2TBgOgGhbWyuqxA.webp?width=800&height=450 800w",
			},
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef2(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className3,
		layoutId,
		variant,
		suLhv9h1F,
		ORC0vCUBE,
		t7BJqRmXA,
		onO9zpjab,
		QcPCm6Jjr,
		fEYrMcRJj,
		CUemSLa8g,
		W5JbL1BSu,
		ZVarABtmB,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		defaultVariant: "B6ioKshK0",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className2, className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup2 id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition2}>
					<MotionDivWithFX
						{...restProps}
						{...gestureHandlers}
						__framer__animate={{
							transition: transition1,
						}}
						__framer__animateOnce={true}
						__framer__enter={animation}
						__framer__exit={animation1}
						__framer__styleAppearEffectEnabled={true}
						__framer__threshold={0}
						__perspectiveFX={false}
						__smartComponentFX={true}
						__targetOpacity={1}
						className={cx(
							scopingClassNames,
							"framer-16e0psl",
							className3,
							classNames,
						)}
						data-framer-name={"Primary"}
						layoutDependency={layoutDependency}
						layoutId={"B6ioKshK0"}
						ref={refBinding}
						style={{
							backgroundColor:
								"var(--token-cba3b9c8-9e49-437e-aca1-1e69db3088dc, rgb(17, 17, 17))",
							borderBottomLeftRadius: 20,
							borderBottomRightRadius: 20,
							borderTopLeftRadius: 20,
							borderTopRightRadius: 20,
							boxShadow:
								"16px 24px 20px 8px rgba(0, 0, 0, 0.4), inset 0px 2px 0px 0px rgba(184, 180, 180, 0.08)",
							...style,
						}}
					>
						<motion2.div
							className={"framer-uc9z24"}
							data-framer-name={"Content"}
							layoutDependency={layoutDependency}
							layoutId={"IeIUYfXZg"}
						>
							<motion2.div
								className={"framer-e5onc"}
								data-framer-name={"Heading & Icon"}
								layoutDependency={layoutDependency}
								layoutId={"YNtX3zrdp"}
							>
								<Instance
									animated={true}
									className={"framer-c7eeny"}
									Component={suLhv9h1F}
									layoutDependency={layoutDependency}
									layoutId={"Z63MRbnjc"}
									style={{
										"--1m6trwb": 0.2,
										"--21h8s6":
											"var(--token-7a7ce709-7970-4e23-97d8-1ae0355d02f0, rgb(255, 255, 255))",
										"--pgex8v": 1.5,
									}}
								/>
								<RichText
									__fromCanvasComponent={true}
									className={"framer-134dngq"}
									fonts={["Inter"]}
									layoutDependency={layoutDependency}
									layoutId={"kPggJPx4P"}
									style={{
										"--framer-link-text-color": "rgb(0, 153, 255)",
										"--framer-link-text-decoration": "underline",
									}}
									text={ORC0vCUBE}
									verticalAlignment={"top"}
									withExternalLayout={true}
								>
									<React.Fragment>
										<motion2.h5
											className={"framer-styles-preset-1ajziol"}
											data-styles-preset={"WkrX6JBfV"}
										>
											{"Framer Design"}
										</motion2.h5>
									</React.Fragment>
								</RichText>
							</motion2.div>
							<RichText
								__fromCanvasComponent={true}
								className={"framer-1gl58m0"}
								fonts={["Inter"]}
								layoutDependency={layoutDependency}
								layoutId={"IWNmePKwk"}
								style={{
									"--framer-link-text-color": "rgb(0, 153, 255)",
									"--framer-link-text-decoration": "underline",
									opacity: 0.7,
								}}
								text={t7BJqRmXA}
								verticalAlignment={"top"}
								withExternalLayout={true}
							>
								<React.Fragment>
									<motion2.p
										className={"framer-styles-preset-vp3sdo"}
										data-styles-preset={"WQG2SsoyY"}
									>
										{
											"Bringing ideas to life with interactive, user-centered Framer designs that simplify complexity and elevate user experience"
										}
									</motion2.p>
								</React.Fragment>
							</RichText>
						</motion2.div>
						{onO9zpjab && (
							<Image
								background={{
									alt: "",
									fit: "fill",
									loading: getLoadingLazyAtYPosition(
										(componentViewport?.y || 0) +
											30 +
											(((componentViewport?.height || 434) - 60 - 179) / 2 +
												179 +
												32),
									),
									pixelHeight: 1260,
									pixelWidth: 2400,
									sizes: `calc(${componentViewport?.width || "100vw"} - 60px)`,
									...toResponsiveImage(QcPCm6Jjr),
								}}
								className={"framer-2xcnz2"}
								layoutDependency={layoutDependency}
								layoutId={"B3BwYkh12"}
								style={{
									borderBottomLeftRadius: 7,
									borderBottomRightRadius: 7,
									borderTopLeftRadius: 7,
									borderTopRightRadius: 7,
									boxShadow: "20px 30px 20px 8px rgba(0, 0, 0, 0.4)",
								}}
							/>
						)}
						{fEYrMcRJj && (
							<ComponentViewportProvider>
								<SmartComponentScopedContainer
									className={"framer-azj6rc-container"}
									isAuthoredByUser={true}
									isModuleExternal={true}
									layoutDependency={layoutDependency}
									layoutId={"k8VKrFHAq-container"}
									nodeId={"k8VKrFHAq"}
									rendersWithMotion={true}
									scopeId={"iwZ8DtEpy"}
								>
									<Ticker
										alignment={"center"}
										direction={"left"}
										fadeOptions={{
											fadeAlpha: 0,
											fadeContent: true,
											fadeInset: 0,
											fadeWidth: 25,
											overflow: false,
										}}
										gap={10}
										height={"100%"}
										hoverFactor={1}
										id={"k8VKrFHAq"}
										layoutId={"k8VKrFHAq"}
										padding={10}
										paddingBottom={10}
										paddingLeft={10}
										paddingPerSide={false}
										paddingRight={10}
										paddingTop={10}
										sizingOptions={{
											heightType: true,
											widthType: true,
										}}
										slots={[
											<Image
												background={{
													alt: "",
													fit: "fill",
													intrinsicHeight: 1029,
													intrinsicWidth: 1459,
													pixelHeight: 422,
													pixelWidth: 750,
													sizes: "299px",
													...toResponsiveImage(CUemSLa8g),
												}}
												className={"framer-1p37e1a"}
												data-framer-name={"Ticker Image 1"}
												layoutDependency={layoutDependency}
												layoutId={"f2xxSZXqd-zlhHLlT9H-0"}
												style={{
													borderBottomLeftRadius: 15,
													borderBottomRightRadius: 15,
													borderTopLeftRadius: 15,
													borderTopRightRadius: 15,
												}}
											/>,
											<Image
												background={{
													alt: "",
													fit: "fill",
													intrinsicHeight: 1029,
													intrinsicWidth: 1459,
													pixelHeight: 250,
													pixelWidth: 315,
													sizes: "302px",
													...toResponsiveImage(W5JbL1BSu),
												}}
												className={"framer-1a455c6"}
												data-framer-name={"Ticker Image 2"}
												layoutDependency={layoutDependency}
												layoutId={"JbbkoHdB9-gK4yOXLAQ-1"}
												style={{
													borderBottomLeftRadius: 15,
													borderBottomRightRadius: 15,
													borderTopLeftRadius: 15,
													borderTopRightRadius: 15,
												}}
											/>,
											<Image
												background={{
													alt: "",
													fit: "fill",
													intrinsicHeight: 1029,
													intrinsicWidth: 1461,
													pixelHeight: 450,
													pixelWidth: 800,
													sizes: "300px",
													...toResponsiveImage(ZVarABtmB),
												}}
												className={"framer-170kwap"}
												data-framer-name={"Ticker Image 3"}
												layoutDependency={layoutDependency}
												layoutId={"V5Sk4Plai-Bh8q4LRxt-2"}
												style={{
													borderBottomLeftRadius: 15,
													borderBottomRightRadius: 15,
													borderTopLeftRadius: 15,
													borderTopRightRadius: 15,
												}}
											/>,
										]}
										speed={60}
										style={{
											height: "100%",
											width: "100%",
										}}
										width={"100%"}
									/>
								</SmartComponentScopedContainer>
							</ComponentViewportProvider>
						)}
					</MotionDivWithFX>
				</Transition>
			</Variants>
		</LayoutGroup2>
	);
});
var css3 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-094xm.framer-odtmfc, .framer-094xm .framer-odtmfc { display: block; }",
	".framer-094xm.framer-16e0psl { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 32px; height: min-content; justify-content: center; overflow: hidden; padding: 30px; position: relative; width: 540px; will-change: var(--framer-will-change-override, transform); }",
	".framer-094xm .framer-uc9z24 { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 16px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 100%; z-index: 3; }",
	".framer-094xm .framer-e5onc { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 100%; }",
	".framer-094xm .framer-c7eeny { flex: none; height: var(--framer-aspect-ratio-supported, 25px); position: relative; width: 25px; }",
	".framer-094xm .framer-134dngq { flex: 1 0 0px; height: auto; position: relative; white-space: pre-wrap; width: 1px; word-break: break-word; word-wrap: break-word; }",
	".framer-094xm .framer-1gl58m0 { flex: none; height: auto; position: relative; white-space: pre-wrap; width: 100%; word-break: break-word; word-wrap: break-word; }",
	".framer-094xm .framer-2xcnz2 { flex: none; height: 239px; position: relative; width: 100%; }",
	".framer-094xm .framer-azj6rc-container { flex: none; height: 244px; position: relative; width: 100%; }",
	".framer-094xm .framer-1p37e1a { height: 233px; overflow: visible; position: relative; width: 299px; }",
	".framer-094xm .framer-1a455c6 { height: 233px; overflow: visible; position: relative; width: 302px; }",
	".framer-094xm .framer-170kwap { height: 233px; overflow: visible; position: relative; width: 300px; }",
	...css2,
	...css,
];
var FrameriwZ8DtEpy = withCSS(Component, css3, "framer-094xm");
var stdin_default2 = FrameriwZ8DtEpy;
FrameriwZ8DtEpy.displayName = "Service Card";
FrameriwZ8DtEpy.defaultProps = {
	height: 434,
	width: 540,
};
addPropertyControls2(FrameriwZ8DtEpy, {
	suLhv9h1F: {
		defaultValue: {
			identifier:
				"module:KSvtBOJuMnaS19KCHdOk/rkIUHW4WnSk50fJARp6M/QAgTWZoLn.js:default",
			moduleId: "KSvtBOJuMnaS19KCHdOk",
		},
		setModuleId: "omX0gWFPqDwhaiWwf6ab",
		title: "Icon",
		type: ControlType2.VectorSetItem,
	},
	ORC0vCUBE: {
		defaultValue: "Framer Design",
		displayTextArea: false,
		title: "Title",
		type: ControlType2.String,
	},
	t7BJqRmXA: {
		defaultValue:
			"Bringing ideas to life with interactive, user-centered Framer designs that simplify complexity and elevate user experience",
		title: "Description",
		type: ControlType2.String,
	},
	onO9zpjab: {
		defaultValue: false,
		title: "Image banner Visible",
		type: ControlType2.Boolean,
	},
	QcPCm6Jjr: {
		__defaultAssetReference:
			"data:framer/asset-reference,IwwlXF60xjgLFBH3Sj6kzl9eXs.png?originalFilename=Frame+1410103asas850.png&preferredSize=large",
		__vekterDefault: {
			alt: "",
			assetReference:
				"data:framer/asset-reference,IwwlXF60xjgLFBH3Sj6kzl9eXs.png?originalFilename=Frame+1410103asas850.png&preferredSize=large",
		},
		title: "Image banner",
		type: ControlType2.ResponsiveImage,
	},
	fEYrMcRJj: {
		defaultValue: true,
		title: "Ticker Visible",
		type: ControlType2.Boolean,
	},
	CUemSLa8g: {
		__defaultAssetReference:
			"data:framer/asset-reference,SHf0cFljW0oyFMbRhzsnK7vI9Zc.jpg?originalFilename=1_ILYW-ClTQFwgBKSUm-d4tA.jpg&width=750&height=422",
		title: "Ticker Img 1",
		type: ControlType2.ResponsiveImage,
	},
	W5JbL1BSu: {
		__defaultAssetReference:
			"data:framer/asset-reference,bwxJz5Clwu00DEiSST80BJRiac.png?originalFilename=W99o4v.png&width=315&height=250",
		title: "Ticker Img 2",
		type: ControlType2.ResponsiveImage,
	},
	ZVarABtmB: {
		__defaultAssetReference:
			"data:framer/asset-reference,KdhVf2kud9SD2TBgOgGhbWyuqxA.webp?originalFilename=godot-engine.webp&width=800&height=450",
		title: "Ticker Img 3",
		type: ControlType2.ResponsiveImage,
	},
});
addFonts(
	FrameriwZ8DtEpy,
	[
		{
			explicitInter: true,
			fonts: [
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2070, U+2074-207E, U+2080-208E, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/GrgcKwrN6d3Uz8EwcLHZxwEfC4.woff2",
					weight: "400",
				},
				{
					cssFamilyName: "Inter",
					source: "framer",
					style: "normal",
					uiFamilyName: "Inter",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...TickerFonts,
		...getFontsFromSharedStyle(fonts2),
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:service-card
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"0db2cec6a51bfbc819a58c52eb8c1d5df9643fd4922504e375a2cbd7f2ff2fa5"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default2, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ServiceCardFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"0db2cec6a51bfbc819a58c52eb8c1d5df9643fd4922504e375a2cbd7f2ff2fa5"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default2}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default2);
var service_card_default = ComponentWithRoot;
export { service_card_default as default };
